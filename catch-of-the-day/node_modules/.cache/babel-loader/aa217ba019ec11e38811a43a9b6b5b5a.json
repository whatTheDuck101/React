{"ast":null,"code":"import _objectSpread from \"/Users/whattheduck/code/whatTheDuck101/ReactProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/whattheduck/code/whatTheDuck101/ReactProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/whattheduck/code/whatTheDuck101/ReactProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/whattheduck/code/whatTheDuck101/ReactProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/whattheduck/code/whatTheDuck101/ReactProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/whattheduck/code/whatTheDuck101/ReactProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/whattheduck/code/whatTheDuck101/ReactProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      // 1. Take a copy of the existing state\n      var fishes = _objectSpread({}, _this.state.fishes); // 2. Add our new fish to that fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; // 3. Set the new fishes object to state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.updateFish = function (key, updateFish) {\n      // take a copy of current state\n      var fishes = _objectSpread({}, _this.state.fishes); // update state\n\n\n      fishes[key] = updateFish; //set that to state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.deleteFish = function (key) {\n      // copy of current state\n      var fishes = _objectSpread({}, _this.state.fishes); // update state\n\n\n      fishes[key] = null; // set state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // 1. take a copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. Either add to the order, or update the number in our order\n\n\n      order[key] = order[key] + 1 || 1; // 3. Call setState to update our state object\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.removeFromOrder = function (key) {\n      // 1.copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. remove item from order\n\n\n      delete order[key]; // 3. Call setState to update state object\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params; //first reinstate localstorage\n\n      var localStorageRef = localStorage.getItem(params.storeId);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: \"fishes\"\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Header, {\n        tagline: \"Fresh Seafood Market\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"fishes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }))), React.createElement(Order, {\n        fishes: this.state.fishes,\n        order: this.state.order,\n        removeFromOrder: this.removeFromOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Inventory, {\n        addFish: this.addFish,\n        updateFish: this.updateFish,\n        deleteFish: this.deleteFish,\n        loadSampleFishes: this.loadSampleFishes,\n        fishes: this.state.fishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/whattheduck/code/whatTheDuck101/ReactProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","loadSampleFishes","deleteFish","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n  componentDidMount() {\n    const { params } = this.props.match;\n    //first reinstate localstorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updateFish) => {\n    // take a copy of current state\n    const fishes = { ...this.state.fishes };\n    // update state\n    fishes[key] = updateFish;\n    //set that to state\n    this.setState({ fishes });\n  };\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n  deleteFish = key => {\n    // copy of current state\n    const fishes = { ...this.state.fishes };\n    // update state\n    fishes[key] = null;\n    // set state\n    this.setState({ fishes });\n  };\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n  removeFromOrder = key => {\n    // 1.copy of state\n    const order = { ...this.state.order };\n    // 2. remove item from order\n    delete order[key];\n    // 3. Call setState to update state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}